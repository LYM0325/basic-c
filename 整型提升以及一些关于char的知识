#include<stdio.h>
int main()
{
	char a = -1;
	signed char b = -1;
	unsigned char c = -1;
	printf("%d %d %d\n",a,b,c);//-1 -1 255
	char d = -128;
	//10000000 00000000 00000000 10000000
	//11111111 11111111 11111111 01111111
	//11111111 11111111 11111111 10000000
	//10000000
	//整型提升按照原来的符号位进行提升，原来是有符号的char，所以前面补的都是1 
	//11111111 11111111 11111111 10000000
	printf("%u\n",d);//%u是按照无符号的输出，所以会输出一个很大的正整数 
	char e = 128;
	//00000000 00000000 00000000 10000000
	//10000000
	//11111111 11111111 11111111 10000000
	printf("%u\n",e); //输出还是那个很大的数字 
	//char的范围是-128（10000000）~127 
	unsigned int f;
	for(f = 9;f>=0;f--)
	{
//		printf("%u ",f);//死循环，因为前面确定了f位无符号数，不可能为负数 
//		printf("%d ",f);//死循环 
	}
	char arr[1000];
	for(a = 0;a<1000;a++)
	{
		arr[a] = -1-a;//-1 -2...-127 -128 127 126..1 0
	} 
	printf("%d ",strlen(arr));//结果是255,因为strlen找的是'\0' 
//////////////////////////////////////////////////////////////////
	unsigned int i = 0;
	for(i = 0;i<2=55;i++)
	{
	printf("hello,world");//这是一个死循环,因为无符号数char最大只到255 
	}
	return 0;
}
