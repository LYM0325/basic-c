#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#define ROW 3
#define COL 3
void menu()
{
	printf("************************\n");
	printf("*****1.play  0.exit*****\n");
	printf("************************\n");
}
void InitBoard(char board[ROW][COL],int row,int col)
{
	int i = 0;
	int j = 0;
	for(i = 0;i< row;i++)
	{
		for(j = 0;j<col;j++)
		{
			board[i][j] = ' ';
		}
	}
	
}
void DisplayBoard(char board[ROW][COL],int row,int col)
{
	int i = 0;
	for(i = 0;i<row;i++)
	{
		int j = 0;
		for(j = 0;j<col;j++){
			printf(" %c ",board[i][j]);
			if(j<col-1)
			printf("|");
		}
		printf("\n");
		if(i<row-1)
		{
			for(j=0;j<col;j++)
			{
				printf("---");
				if(j<col-1)
				printf("|");
			}
			printf("\n");
		}
	}
}
void PlayerMove(char board[ROW][COL],int row,int col)
{
	int x = 0;
	int y = 0;
	while(1)
	{	
	printf("玩家行动：\n");
	printf("请输入要下的坐标：");
	scanf("%d%d",&x,&y);
	if(x>=1&&x<=row&&y>=1&&y<=col)
	{
		if(board[x-1][y-1] == ' ')
		{
			board[x-1][y-1] = '*';
			break;
		}
		else
		{
			printf("该坐标已经被占用\n");
		}
	}
	else
	{
		printf("坐标不合理，请重新输入："); 
	}
		
	}
}
void ComputerMove(char board[ROW][COL],int row,int col)
{
	int x = 0;
	int y = 0;
	printf("电脑走：\n");
	while(1)
	{
		x = rand() % row;
		y = rand() % col;
		if(board[x][y] == ' ')
		{
			board[x][y] = '#';
			break;
		}
	}
}
int IsFull(char board[ROW][COL],int row,int col)
{
	int i = 0;
	int j = 0;
	for(i = 0;i<row;i++)
	{
		for(j=0;j<col;j++)
		{
			if(board[i][j] == ' ')
			{
				return 0;	
			}
		}
	}
	return 1;
}
char IsWin(char board[ROW][COL],int row,int col)
{
	int i = 0;
	for(i =0;i<row;i++)
	{
		if(board[i][0] == board[i][1]&&board[i][1] == board[i][2]&&board[i][1]!= ' ')
		{
			return board[i][1];
		}
	}
	for(i = 0;i<col;i++)
	{
		if(board[0][i] == board[1][i]&&board[1][i] == board[2][i]&&board[1][i]!= ' ')
		{
			return board[1][i];
		}
	}
	if(board[0][0] == board[1][1]&&board[1][1] == board[2][2]&&board[1][1] != ' ')
	{
		return board[1][1];
	}
	if(board[2][0] == board[1][1]&&board[1][1] == board[0][2]&&board[1][1] != ' ')
	{
		return board[1][1];
	}
	if(1 == IsFull(board,ROW,COL)){
		return 'Q'; 
	}
	return 'C';
}
void game()
{
	char board[ROW][COL] = {0};
	//初始化数组
	InitBoard(board,ROW,COL); 
	DisplayBoard(board,ROW,COL);
	char ret = ' ';
	while(1)
	{
		//玩家下棋
		PlayerMove(board,ROW,COL); 
		DisplayBoard(board,ROW,COL);
		ret = IsWin(board,ROW,COL);
		if(ret != 'C')
		{
			break;
		}
		//电脑下棋 
		ComputerMove(board,ROW,COL);
		DisplayBoard(board,ROW,COL);
		ret = IsWin(board,ROW,COL);
			if(ret != 'C')
		{
			break;
		}
	 } 
	if(ret == '*')
	{
		printf("玩家赢\n");
	}
	else if(ret == '#')
	{
		printf("电脑赢\n");
	}
	else
	{
		printf("平局\n");
	}
}
void test()
{	
	int input = 0;
	srand((unsigned)time(NULL));
	do
	{
		menu();
		printf("请选择：");
		scanf("%d",&input);
		switch(input)
		{
			case 1:
				printf("开始游戏\n");
				game();
				break;
			case 0:
				printf("退出游戏\n");
				break;
			default:
				printf("输入错误，请重新输入：\n");
				break; 			
		}	
	}while(input);
}
int main()
{
	test();
	return 0;
 } 
