#include<stdio.h>
//数组指针：是指向数组的指针 
void print1(int arr[3][5],int row,int col)
{
	int i = 0;
	int j = 0;
	for(i=0;i<row;i++)
	{
		for(j=0;j<col;j++)
		{
			printf("%d ",arr[i][j]);
		}
		printf("\n");
	}
}
void print2(int(*p)[5],int row,int col)//*p是一个数组指针 
{
	int i = 0;
	int j = 0;
	for(i = 0;i < row;i++)
	{
		for(j =0 ;j < col;j++)
		{
		printf("%d ",*(*(p+i)+j));
		}
		printf("\n");
	} 
}
int  main()
{
	int  a = 10;
	int *pa = &a;
	char ch = 'w';
	char *pc = &ch;
	int arr[10] = {1,2,3,4,5,6};
	int (* parr)[10] = &arr;//parr就是一个数组指针，存放的是数组地址
	double* d[5];
	double *(*pd)[5] = &d;//pd是一个数组指针
	int* p1 = arr;//取首元素地址 
	int (*p2)[10] = &arr;//取数组地址 
	printf("%p\n",p1);
	printf("%p\n",p1+1);//跳过一个int
	printf("%p\n",p2);
	printf("%p\n",p2+1);//跳过了一整个数组 
	printf("%d\n",*(*p2));//输出表示数组中的第一个元素，*p2表示的是数组的地址，所以需要再次的解引用操作符 
	printf("%d\n",*((*p2)+1));//输出表示数组中的第二个元素 
	//二维数组以上才使用数组指针
	int arry[3][5] = {{1,2,3,4,5},{2,3,4,5,6},{3,4,5,6,7}};
	print1(arry,3,5); 
	print2(arry,3,5);//arry是数组名，表示数组首元素的地址，二维数组的首元素是第一行 
	
	// int arr[5] 整型数组
	// int *p[5]  存放指针的数组
	// int (*p)[5] 数组指针
	// int (*p[10])[5] 存放数组指针的数组，该数组能存放10个数组指针，每个数组指针指向一个由5个int元素组成的整型数组 
	
	  
	//数组名是数组首元素的地址
	//sizeof（数组名） 数组名表示整个数组，计算的是整个数组的大小，单位是字节
	//&数组名，数组名表示整个数组，取出的是整个数组的地址 
	return 0;
}
